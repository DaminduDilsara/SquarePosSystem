// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/domain/clients/square_client/square_location_client.go

// Package mock_square_client is a generated GoMock package.
package mocks

import (
	request_schemas "SquarePosSystem/internal/domain/entities/schemas/request_schemas"
	response_schemas "SquarePosSystem/internal/domain/entities/schemas/response_schemas"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockLocationClient is a mock of LocationClient interface.
type MockLocationClient struct {
	ctrl     *gomock.Controller
	recorder *MockLocationClientMockRecorder
}

// MockLocationClientMockRecorder is the mock recorder for MockLocationClient.
type MockLocationClientMockRecorder struct {
	mock *MockLocationClient
}

// NewMockLocationClient creates a new mock instance.
func NewMockLocationClient(ctrl *gomock.Controller) *MockLocationClient {
	mock := &MockLocationClient{ctrl: ctrl}
	mock.recorder = &MockLocationClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLocationClient) EXPECT() *MockLocationClientMockRecorder {
	return m.recorder
}

// CreateLocation mocks base method.
func (m *MockLocationClient) CreateLocation(request request_schemas.CreateLocationSquareRequest, authHeader string) (*response_schemas.CreateLocationSquareResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateLocation", request, authHeader)
	ret0, _ := ret[0].(*response_schemas.CreateLocationSquareResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateLocation indicates an expected call of CreateLocation.
func (mr *MockLocationClientMockRecorder) CreateLocation(request, authHeader interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateLocation", reflect.TypeOf((*MockLocationClient)(nil).CreateLocation), request, authHeader)
}
