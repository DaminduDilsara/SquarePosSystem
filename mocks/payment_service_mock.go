// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/domain/services/payment_service/payment_service.go

// Package mock_payment_service is a generated GoMock package.
package mocks

import (
	request_schemas "SquarePosSystem/internal/domain/entities/schemas/request_schemas"
	response_schemas "SquarePosSystem/internal/domain/entities/schemas/response_schemas"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockPaymentService is a mock of PaymentService interface.
type MockPaymentService struct {
	ctrl     *gomock.Controller
	recorder *MockPaymentServiceMockRecorder
}

// MockPaymentServiceMockRecorder is the mock recorder for MockPaymentService.
type MockPaymentServiceMockRecorder struct {
	mock *MockPaymentService
}

// NewMockPaymentService creates a new mock instance.
func NewMockPaymentService(ctrl *gomock.Controller) *MockPaymentService {
	mock := &MockPaymentService{ctrl: ctrl}
	mock.recorder = &MockPaymentServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPaymentService) EXPECT() *MockPaymentServiceMockRecorder {
	return m.recorder
}

// CreatePayment mocks base method.
func (m *MockPaymentService) CreatePayment(request request_schemas.CreatePaymentRequest, authHeader string) (*response_schemas.CreatePaymentResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePayment", request, authHeader)
	ret0, _ := ret[0].(*response_schemas.CreatePaymentResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreatePayment indicates an expected call of CreatePayment.
func (mr *MockPaymentServiceMockRecorder) CreatePayment(request, authHeader interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePayment", reflect.TypeOf((*MockPaymentService)(nil).CreatePayment), request, authHeader)
}
